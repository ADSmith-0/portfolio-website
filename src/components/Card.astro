---
import type { Project, ProjectIds } from "src/types";
import Logo from "@components/Logo.astro";
import { projects } from "src/projects";
import { technologyFromId } from "src/technologies";

interface Props {
  projectId: ProjectIds;
  title: string;
}

const { projectId, title } = Astro.props;

const project: Project = projects.find(({ id }) => id === projectId)!;
---

<li
  class="card flex-column align-items-start p-7 br-3 h-100 border-box"
  style={`--border-colour: ${project.colour};`}
>
  {
    project.technologies.length > 1 ? (
      <Logo id={projectId} size={55} />
    ) : (
      <a
        target="_blank"
        class="block m-0"
        href={technologyFromId[project.technologies[0]].link}
        title={technologyFromId[project.technologies[0]].name}
      >
        <Logo id={project.technologies[0]} size={55} />
      </a>
    )
  }
  <h2 class="fs-2xl pt-5">{title}</h2>
  {
    project.technologies.length > 1 && (
      <div class="flex-row-center flex-wrap gap-2">
        {project.technologies.map((tagId) => {
          const tag = technologyFromId[tagId];
          return (
            <div class="pr-3 py-1">
              <a
                target="_blank"
                class="block m-0"
                href={tag.link}
                title={tag.name}
              >
                <Logo id={tagId} size={30} />
              </a>
            </div>
          );
        })}
      </div>
    )
  }
  <p class="text-secondary" set:html={project.description} />
  <a href=`/projects/${projectId}`>Read More</a>
</li>
<style>
  li {
    list-style: none;

    &.card {
      border: var(--spacing-2) solid hsl(var(--grey-800));
      transition: border-color 0.1s ease-in-out;
      text-decoration: none;
      min-width: var(--card-width);
      background-color: hsl(var(--grey-900) / 0.2);

      --_blur: var(--spacing-3);

      &:is(:hover, :focus-within) {
        border-color: var(--border-colour);
        background-color: hsl(var(--grey-900) / 0.7);
        box-shadow:
          0 0 var(--_blur) var(--border-colour),
          inset 0 0 var(--_blur) var(--border-colour);
      }
    }
  }
</style>
