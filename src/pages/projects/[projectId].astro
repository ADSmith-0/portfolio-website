---
import RepoLink from "@components/RepoLink.astro";
import TechnologyIcons from "@components/TechnologyIcons.astro";
import Page from "@layouts/Page.astro";
import type { GetStaticPaths } from "astro";
import { projects } from "src/projects";
import type { Project } from "src/types";

export const getStaticPaths = (() =>
  projects.map(({ id }) => ({
    params: { projectId: id },
  }))) satisfies GetStaticPaths;

const { projectId } = Astro.params;

const project: Project = projects.find(({ id }) => id === projectId)!;
---

<Page title={project.name}>
  <div class="px-5 background">
    <h1>{project.name}</h1>
    <p>{project.description}</p>
    {
      (project.versions?.length ?? 0) > 0 && (
        <h2 class="mt-8 text-secondary fs-xl fw-normal">Previous Versions</h2>
      )
    }
    {
      project.versions?.map((version) => (
        <div class="mt-8">
          <span class="flex-row-center gap-8 pt-4">
            <h2 class="pt-0">{version.version}</h2>
            {version.repo !== "" && (
              <div class="fit-content">
                <RepoLink repo={version.repo} />
              </div>
            )}
          </span>
          <div class="mt-4">
            <TechnologyIcons technologies={version.technologies} size={40} />
          </div>
          <p class="mt-4">{version.description}</p>
        </div>
      ))
    }
  </div>
</Page>

<style>
  html {
    background-image: repeating-linear-gradient(
        90deg,
        transparent,
        transparent var(--bg-pattern-size),
        var(--bg-color-accent) var(--bg-pattern-size),
        var(--bg-color-accent) calc(var(--bg-pattern-size) + 1px)
      ),
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent var(--bg-pattern-size),
        var(--bg-color-accent) var(--bg-pattern-size),
        var(--bg-color-accent) calc(var(--bg-pattern-size) + 1px)
      );
  }
</style>
